Z:\bmcdo020\Desktop\CEG3136\Lab2\delay.lst - generated by MGTEK Assembler ASM12 V1.26 Build 144 for WIN32 (x86) - Mon Oct 16 13:56:48 2017

    1:                                 ;------------------------------------------------------
    2:                                 ; Alarm System Simulation Assembler Program
    3:                                 ; File: delay.asm
    4:                                 ; Description: The Delay Module
    5:                                 ; Author: Gilbert Arbez
    6:                                 ; Date: Fall 2010
    7:                                 ;------------------------------------------------------
    8:                                 
    9:                                 ; Some definitions
   10:                                 
Z:\bmcdo020\Desktop\CEG3136\Lab2\delay.asm(11): Error A2063: col(9) 'code_section': section not defined
   11:                                         SWITCH code_section
   12:                                 
   13:                                 ;------------------------------------------------------
   14:                                 ; Subroutine setDelay
   15:                                 ; Parameters: cnt - accumulator D
   16:                                 ; Returns: nothing
   17:                                 ; Global Variables: delayCount
   18:                                 ; Description: Intialises the delayCount 
   19:                                 ;              variable.
   20:                                 ;------------------------------------------------------
   21:     0000                        setDelay: 
   22:     0000 5C 32                     std delayCount
   23:     0002 3D                        rts
   24:                                 
   25:                                 
   26:                                 ;------------------------------------------------------
   27:                                 ; Subroutine: polldelay
   28:                                 ; Parameters:  none
   29:                                 ; Returns: TRUE when delay counter reaches 0 - in accumulator A
   30:                                 ; Local Variables
   31:                                 ;   retval - acc A cntr - X register
   32:                                 ; Global Variables:
   33:                                 ;      delayCount
   34:                                 ; Description: The subroutine delays for 1 ms, decrements delayCount.
   35:                                 ;              If delayCount is zero, return TRUE; FALSE otherwise.
   36:                                 ;   Core Clock is set to 24 MHz, so 1 cycle is 41 2/3 ns
   37:                                 ;   NOP takes up 1 cycle, thus 41 2/3 ns
   38:                                 ;   Need 24 cyles to create 1 microsecond delay
   39:                                 ;   8 cycles creates a 333 1/3 nano delay
   40:                                 ;       DEX - 1 cycle
   41:                                 ;       BNE - 3 cyles - when branch is taken
   42:                                 ;       Need 4 NOP
   43:                                 ;   Run Loop 3000 times to create a 1 ms delay   
   44:                                 ;------------------------------------------------------
   45:                                 ; Stack Usage:
   46:                                         OFFSET 0  ; to setup offset into stack
   47:          =00000011              D15mH EQU 17
   48:          =000000FA              D15mL EQU 250
   49:                                 
   50:     0000 +0001                  DR15mH  RMB 1
   51:     0001 +0001                  DR15mL  RMB 1
   52:                                 
   53:     0002                        PDLY_VARSIZE:
   54:     0002 +0002                  PDLY_PR_Y   DS.W 1 ; preserve Y
   55:     0004 +0002                  PDLY_PR_X   DS.W 1 ; preserve X
   56:     0006 +0001                  PDLY_PR_B   DS.B 1 ; preserve B
   57:     0007 +0002                  PDLY_RA     DS.W 1 ; return address
   58:                                 
   59:                                 
   60:     0009                        REALDELAY:                ;DELAY SUBROUTINE
   61:     0003 86 11                     LDAA  #D15mH       ;LOAD FIRST LAYER DELAY COUNT
   62:     0005 5A 00                     STAA  DR15mH       ;
   63:     0007                        D2:                   ;
   64:     0007 86 FA                     LDAA  #D15mL       ;LOAD SECOND LAYER DELAY COUNT
   65:     0009 5A 01                     STAA  DR15mL       ;
   66:     000B                        D1:                   ;
   67:     000B 73 0001                   DEC   DR15mL       ;DECREMENT SECOND LAYER COUNT
   68:     000E A7                        NOP                ;NOP DELAY
   69:     000F A7                        NOP                ;
   70:     0010 26 F9                     BNE   D1           ;BACK TO START OF SECOND LAYER IF NOT ZERO
   71:     0012 73 0000                   DEC   DR15mH       ;IF SECOND LAYER ZERO DECREMENT FIRST LAYER
   72:     0015 26 F0                     BNE   D2           ;IF FIRST LAYER NOT ZERO GO BACK RELOAD FRIST LAYER
   73:     0017 3D                        RTS                ;RETURN TO FROM SUBROUTINE WEHN LAYER ONE IS ZERO
   74:                                 
   75:     0018 37                     polldelay: pshb
   76:     0019 34                        pshx
   77:     001A 35                        pshy
   78:                                    ; Complete this routine
   79:     001B FD 07D0                   ldy 2000
   80:                                 
   81:     001E                        whileStart
   82:     001E A7                        nop
   83:     001F A7                        nop
   84:     0020 A7                        nop
   85:     0021 A7                        nop
   86:     0022 03                        dey
   87:     0023 26 F9                     bne whileStart
   88:     0025 DE 32                     ldx delayCount
   89:     0027 09                        dex
   90:     0028 27 02                     beq complete
Z:\bmcdo020\Desktop\CEG3136\Lab2\delay.asm(91): Error A2038: col(14) 'false': undefined symbol
   91:                                    lda #FALSE
   92:     002A 20 00                     bra return
   93:     002C                        complete
Z:\bmcdo020\Desktop\CEG3136\Lab2\delay.asm(94): Error A2038: col(13) 'true': undefined symbol
   94:                                    lda #TRUE
   95:     002C                        return
   96:     002C 5E 32                     stx delayCount
   97:                                 
   98:                                    ; restore registers and stack
   99:     002E 31                        puly
  100:     002F 30                        pulx
  101:     0030 33                        pulb
  102:     0031 3D                        rts
  103:                                 
  104:                                 
  105:                                 
  106:                                 ;------------------------------------------------------
  107:                                 ; Global variables
  108:                                 ;------------------------------------------------------
Z:\bmcdo020\Desktop\CEG3136\Lab2\delay.asm(109): Error A2063: col(11) 'globalvar': section not defined
  109:                                    switch globalVar
  110:     0032 +0002                  delayCount ds.w 1   ; 2 byte delay counter

Symbols:
complete                        *0000002c
d1                              *0000000b
d15mh                           *00000011
d15ml                           *000000fa
d2                              *00000007
delaycount                      *00000032
dr15mh                          *00000000
dr15ml                          *00000001
false                           ?00000000
return                          *0000002c
true                            ?00000000
whilestart                      *0000001e

